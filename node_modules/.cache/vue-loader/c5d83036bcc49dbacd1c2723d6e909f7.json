{"remainingRequest":"/home/thomas/Code/BingoFerrand/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/thomas/Code/BingoFerrand/src/components/Cell.vue?vue&type=template&id=560a78ea&scoped=true","dependencies":[{"path":"/home/thomas/Code/BingoFerrand/src/components/Cell.vue","mtime":1649855619227},{"path":"/home/thomas/Code/BingoFerrand/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/thomas/Code/BingoFerrand/node_modules/vue-loader/dist/templateLoader.js","mtime":499162500000},{"path":"/home/thomas/Code/BingoFerrand/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/thomas/Code/BingoFerrand/node_modules/vue-loader/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGJ1dHRvbiBAY2xpY2s9InRvZ2dsZVNlbGVjdGlvbiIgQGtleWRvd24uZW50ZXI9InRvZ2dsZVNlbGVjdGlvbiIKICAgICAgICAgIDpjbGFzcz0ieyBzZWxlY3RlZDogaXNTZWxlY3RlZCB9Ij4KICAgIHt7IHRoaXMud29yZCB9fQogIDwvYnV0dG9uPgo="},{"version":3,"sources":["/home/thomas/Code/BingoFerrand/src/components/Cell.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACvC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/thomas/Code/BingoFerrand/src/components/Cell.vue","sourceRoot":"","sourcesContent":["<template>\n  <button @click=\"toggleSelection\" @keydown.enter=\"toggleSelection\"\n          :class=\"{ selected: isSelected }\">\n    {{ this.word }}\n  </button>\n</template>\n\n<script>\nexport default {\n  name: 'CellButton',\n  data() {\n    return {\n      isSelected: false,\n    };\n  },\n  props: {\n    word: {\n      type: String,\n      default: 'x',\n    },\n  },\n  methods: {\n    toggleSelection() {\n      this.isSelected = !this.isSelected;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n  cursor: pointer;\n  border: 5px solid #728294;\n  border-radius: 35px;\n  width: 120px;\n  height: 120px;\n  background: transparent;\n  transition: all 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86);\n  &.selected {\n    background: #728294;\n  }\n  &:focus {\n    border-color: #244d66;\n    outline: 0;\n  }\n}\n</style>\n"]}]}