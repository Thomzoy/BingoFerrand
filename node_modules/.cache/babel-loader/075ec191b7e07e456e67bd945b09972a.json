{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.is-array.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\n\nvar domhandler_1 = require(\"domhandler\");\n\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\n\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s outer HTML.\n */\n\n\nfunction getOuterHTML(node, options) {\n  return (0, dom_serializer_1[\"default\"])(node, options);\n}\n\nexports.getOuterHTML = getOuterHTML;\n/**\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s inner HTML.\n */\n\nfunction getInnerHTML(node, options) {\n  return (0, domhandler_1.hasChildren)(node) ? node.children.map(function (node) {\n    return getOuterHTML(node, options);\n  }).join(\"\") : \"\";\n}\n\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\n\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if ((0, domhandler_1.isTag)(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if ((0, domhandler_1.isCDATA)(node)) return getText(node.children);\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\n\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\n\nfunction textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n\n  if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n    return textContent(node.children);\n  }\n\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\n\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\n\nfunction innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n\n  if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n    return innerText(node.children);\n  }\n\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\n\nexports.innerText = innerText;","map":{"version":3,"sources":["/home/thomas/Code/BingoFerrand/node_modules/domutils/lib/stringify.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","innerText","textContent","getText","getInnerHTML","getOuterHTML","domhandler_1","require","dom_serializer_1","domelementtype_1","node","options","hasChildren","children","map","join","Array","isArray","isTag","name","isCDATA","isText","data","isComment","type","ElementType","Tag"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n    return (0, dom_serializer_1.default)(node, options);\n}\nexports.getOuterHTML = getOuterHTML;\n/**\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n    return (0, domhandler_1.hasChildren)(node)\n        ? node.children.map(function (node) { return getOuterHTML(node, options); }).join(\"\")\n        : \"\";\n}\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if ((0, domhandler_1.isTag)(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if ((0, domhandler_1.isCDATA)(node))\n        return getText(node.children);\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n        return textContent(node.children);\n    }\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n        return innerText(node.children);\n    }\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.innerText = innerText;\n"]},"metadata":{},"sourceType":"script"}