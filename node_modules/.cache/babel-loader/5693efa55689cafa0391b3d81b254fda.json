{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.array.is-array.js\");\n\nrequire(\"core-js/modules/es.array.for-each.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.array.splice.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cheerio = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\n\nvar options_1 = tslib_1.__importDefault(require(\"./options\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar Attributes = tslib_1.__importStar(require(\"./api/attributes\"));\n\nvar Traversing = tslib_1.__importStar(require(\"./api/traversing\"));\n\nvar Manipulation = tslib_1.__importStar(require(\"./api/manipulation\"));\n\nvar Css = tslib_1.__importStar(require(\"./api/css\"));\n\nvar Forms = tslib_1.__importStar(require(\"./api/forms\"));\n\nvar Cheerio =\n/** @class */\nfunction () {\n  /**\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\n   * constructor is not recommended. Please use $.load instead.\n   *\n   * @private\n   * @param selector - The new selection.\n   * @param context - Context of the selection.\n   * @param root - Sets the root node.\n   * @param options - Options for the instance.\n   */\n  function Cheerio(selector, context, root, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = options_1[\"default\"];\n    }\n\n    this.length = 0;\n    this.options = options; // $(), $(null), $(undefined), $(false)\n\n    if (!selector) return this;\n\n    if (root) {\n      if (typeof root === 'string') root = parse_1[\"default\"](root, this.options, false);\n      this._root = new this.constructor(root, null, null, this.options); // Add a cyclic reference, so that calling methods on `_root` never fails.\n\n      this._root._root = this._root;\n    } // $($)\n\n\n    if (utils_1.isCheerio(selector)) return selector;\n    var elements = typeof selector === 'string' && utils_1.isHtml(selector) ? // $(<html>)\n    parse_1[\"default\"](selector, this.options, false).children : isNode(selector) ? // $(dom)\n    [selector] : Array.isArray(selector) ? // $([dom])\n    selector : null;\n\n    if (elements) {\n      elements.forEach(function (elem, idx) {\n        _this[idx] = elem;\n      });\n      this.length = elements.length;\n      return this;\n    } // We know that our selector is a string now.\n\n\n    var search = selector;\n    var searchContext = !context ? // If we don't have a context, maybe we have a root, from loading\n    this._root : typeof context === 'string' ? utils_1.isHtml(context) ? // $('li', '<ul>...</ul>')\n    this._make(parse_1[\"default\"](context, this.options, false)) : ( // $('li', 'ul')\n    search = context + \" \" + search, this._root) : utils_1.isCheerio(context) ? // $('li', $)\n    context : // $('li', node), $('li', [nodes])\n    this._make(context); // If we still don't have a context, return\n\n    if (!searchContext) return this;\n    /*\n     * #id, .class, tag\n     */\n    // @ts-expect-error No good way to type this â€” we will always return `Cheerio<Element>` here.\n\n    return searchContext.find(search);\n  }\n  /**\n   * Make a cheerio object.\n   *\n   * @private\n   * @param dom - The contents of the new object.\n   * @param context - The context of the new object.\n   * @returns The new cheerio object.\n   */\n\n\n  Cheerio.prototype._make = function (dom, context) {\n    var cheerio = new this.constructor(dom, context, this._root, this.options);\n    cheerio.prevObject = this;\n    return cheerio;\n  };\n\n  return Cheerio;\n}();\n\nexports.Cheerio = Cheerio;\n/** Set a signature of the object. */\n\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\n\nCheerio.prototype.splice = Array.prototype.splice; // Support for (const element of $(...)) iteration:\n\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator]; // Plug in the API\n\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\n\nfunction isNode(obj) {\n  return !!obj.name || obj.type === 'root' || obj.type === 'text' || obj.type === 'comment';\n}","map":{"version":3,"sources":["/home/thomas/Code/BingoFerrand/node_modules/cheerio/lib/cheerio.js"],"names":["Object","defineProperty","exports","value","Cheerio","tslib_1","require","parse_1","__importDefault","options_1","utils_1","Attributes","__importStar","Traversing","Manipulation","Css","Forms","selector","context","root","options","_this","length","_root","constructor","isCheerio","elements","isHtml","children","isNode","Array","isArray","forEach","elem","idx","search","searchContext","_make","find","prototype","dom","cheerio","prevObject","splice","Symbol","iterator","assign","obj","name","type"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cheerio = void 0;\nvar tslib_1 = require(\"tslib\");\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\nvar options_1 = tslib_1.__importDefault(require(\"./options\"));\nvar utils_1 = require(\"./utils\");\nvar Attributes = tslib_1.__importStar(require(\"./api/attributes\"));\nvar Traversing = tslib_1.__importStar(require(\"./api/traversing\"));\nvar Manipulation = tslib_1.__importStar(require(\"./api/manipulation\"));\nvar Css = tslib_1.__importStar(require(\"./api/css\"));\nvar Forms = tslib_1.__importStar(require(\"./api/forms\"));\nvar Cheerio = /** @class */ (function () {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use $.load instead.\n     *\n     * @private\n     * @param selector - The new selection.\n     * @param context - Context of the selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    function Cheerio(selector, context, root, options) {\n        var _this = this;\n        if (options === void 0) { options = options_1.default; }\n        this.length = 0;\n        this.options = options;\n        // $(), $(null), $(undefined), $(false)\n        if (!selector)\n            return this;\n        if (root) {\n            if (typeof root === 'string')\n                root = parse_1.default(root, this.options, false);\n            this._root = new this.constructor(root, null, null, this.options);\n            // Add a cyclic reference, so that calling methods on `_root` never fails.\n            this._root._root = this._root;\n        }\n        // $($)\n        if (utils_1.isCheerio(selector))\n            return selector;\n        var elements = typeof selector === 'string' && utils_1.isHtml(selector)\n            ? // $(<html>)\n                parse_1.default(selector, this.options, false).children\n            : isNode(selector)\n                ? // $(dom)\n                    [selector]\n                : Array.isArray(selector)\n                    ? // $([dom])\n                        selector\n                    : null;\n        if (elements) {\n            elements.forEach(function (elem, idx) {\n                _this[idx] = elem;\n            });\n            this.length = elements.length;\n            return this;\n        }\n        // We know that our selector is a string now.\n        var search = selector;\n        var searchContext = !context\n            ? // If we don't have a context, maybe we have a root, from loading\n                this._root\n            : typeof context === 'string'\n                ? utils_1.isHtml(context)\n                    ? // $('li', '<ul>...</ul>')\n                        this._make(parse_1.default(context, this.options, false))\n                    : // $('li', 'ul')\n                        ((search = context + \" \" + search), this._root)\n                : utils_1.isCheerio(context)\n                    ? // $('li', $)\n                        context\n                    : // $('li', node), $('li', [nodes])\n                        this._make(context);\n        // If we still don't have a context, return\n        if (!searchContext)\n            return this;\n        /*\n         * #id, .class, tag\n         */\n        // @ts-expect-error No good way to type this â€” we will always return `Cheerio<Element>` here.\n        return searchContext.find(search);\n    }\n    /**\n     * Make a cheerio object.\n     *\n     * @private\n     * @param dom - The contents of the new object.\n     * @param context - The context of the new object.\n     * @returns The new cheerio object.\n     */\n    Cheerio.prototype._make = function (dom, context) {\n        var cheerio = new this.constructor(dom, context, this._root, this.options);\n        cheerio.prevObject = this;\n        return cheerio;\n    };\n    return Cheerio;\n}());\nexports.Cheerio = Cheerio;\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\nfunction isNode(obj) {\n    return (!!obj.name ||\n        obj.type === 'root' ||\n        obj.type === 'text' ||\n        obj.type === 'comment');\n}\n"]},"metadata":{},"sourceType":"script"}