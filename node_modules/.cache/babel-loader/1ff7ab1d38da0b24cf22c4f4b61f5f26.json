{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nvar _inherits = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/inherits.js\")[\"default\"];\n\nvar _createSuper = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/createSuper.js\")[\"default\"];\n\nvar ErrorReportingMixinBase = require('./mixin-base');\n\nvar ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\n\nvar LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\n\nvar Mixin = require('../../utils/mixin');\n\nvar ErrorReportingParserMixin = /*#__PURE__*/function (_ErrorReportingMixinB) {\n  _inherits(ErrorReportingParserMixin, _ErrorReportingMixinB);\n\n  var _super = _createSuper(ErrorReportingParserMixin);\n\n  function ErrorReportingParserMixin(parser, opts) {\n    var _this;\n\n    _classCallCheck(this, ErrorReportingParserMixin);\n\n    _this = _super.call(this, parser, opts);\n    _this.opts = opts;\n    _this.ctLoc = null;\n    _this.locBeforeToken = false;\n    return _this;\n  }\n\n  _createClass(ErrorReportingParserMixin, [{\n    key: \"_setErrorLocation\",\n    value: function _setErrorLocation(err) {\n      if (this.ctLoc) {\n        err.startLine = this.ctLoc.startLine;\n        err.startCol = this.ctLoc.startCol;\n        err.startOffset = this.ctLoc.startOffset;\n        err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\n        err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\n        err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\n      }\n    }\n  }, {\n    key: \"_getOverriddenMethods\",\n    value: function _getOverriddenMethods(mxn, orig) {\n      return {\n        _bootstrap: function _bootstrap(document, fragmentContext) {\n          orig._bootstrap.call(this, document, fragmentContext);\n\n          Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\n          Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n        },\n        _processInputToken: function _processInputToken(token) {\n          mxn.ctLoc = token.location;\n\n          orig._processInputToken.call(this, token);\n        },\n        _err: function _err(code, options) {\n          mxn.locBeforeToken = options && options.beforeToken;\n\n          mxn._reportError(code);\n        }\n      };\n    }\n  }]);\n\n  return ErrorReportingParserMixin;\n}(ErrorReportingMixinBase);\n\nmodule.exports = ErrorReportingParserMixin;","map":{"version":3,"sources":["/home/thomas/Code/BingoFerrand/node_modules/cheerio/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js"],"names":["ErrorReportingMixinBase","require","ErrorReportingTokenizerMixin","LocationInfoTokenizerMixin","Mixin","ErrorReportingParserMixin","parser","opts","ctLoc","locBeforeToken","err","startLine","startCol","startOffset","endLine","endCol","endOffset","mxn","orig","_bootstrap","document","fragmentContext","call","install","tokenizer","_processInputToken","token","location","_err","code","options","beforeToken","_reportError","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,uBAAuB,GAAGC,OAAO,CAAC,cAAD,CAAvC;;AACA,IAAMC,4BAA4B,GAAGD,OAAO,CAAC,mBAAD,CAA5C;;AACA,IAAME,0BAA0B,GAAGF,OAAO,CAAC,kCAAD,CAA1C;;AACA,IAAMG,KAAK,GAAGH,OAAO,CAAC,mBAAD,CAArB;;IAEMI,yB;;;;;AACF,qCAAYC,MAAZ,EAAoBC,IAApB,EAA0B;AAAA;;AAAA;;AACtB,8BAAMD,MAAN,EAAcC,IAAd;AAEA,UAAKA,IAAL,GAAYA,IAAZ;AACA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,cAAL,GAAsB,KAAtB;AALsB;AAMzB;;;;WAED,2BAAkBC,GAAlB,EAAuB;AACnB,UAAI,KAAKF,KAAT,EAAgB;AACZE,QAAAA,GAAG,CAACC,SAAJ,GAAgB,KAAKH,KAAL,CAAWG,SAA3B;AACAD,QAAAA,GAAG,CAACE,QAAJ,GAAe,KAAKJ,KAAL,CAAWI,QAA1B;AACAF,QAAAA,GAAG,CAACG,WAAJ,GAAkB,KAAKL,KAAL,CAAWK,WAA7B;AAEAH,QAAAA,GAAG,CAACI,OAAJ,GAAc,KAAKL,cAAL,GAAsB,KAAKD,KAAL,CAAWG,SAAjC,GAA6C,KAAKH,KAAL,CAAWM,OAAtE;AACAJ,QAAAA,GAAG,CAACK,MAAJ,GAAa,KAAKN,cAAL,GAAsB,KAAKD,KAAL,CAAWI,QAAjC,GAA4C,KAAKJ,KAAL,CAAWO,MAApE;AACAL,QAAAA,GAAG,CAACM,SAAJ,GAAgB,KAAKP,cAAL,GAAsB,KAAKD,KAAL,CAAWK,WAAjC,GAA+C,KAAKL,KAAL,CAAWQ,SAA1E;AACH;AACJ;;;WAED,+BAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AAC7B,aAAO;AACHC,QAAAA,UADG,sBACQC,QADR,EACkBC,eADlB,EACmC;AAClCH,UAAAA,IAAI,CAACC,UAAL,CAAgBG,IAAhB,CAAqB,IAArB,EAA2BF,QAA3B,EAAqCC,eAArC;;AAEAjB,UAAAA,KAAK,CAACmB,OAAN,CAAc,KAAKC,SAAnB,EAA8BtB,4BAA9B,EAA4De,GAAG,CAACV,IAAhE;AACAH,UAAAA,KAAK,CAACmB,OAAN,CAAc,KAAKC,SAAnB,EAA8BrB,0BAA9B;AACH,SANE;AAQHsB,QAAAA,kBARG,8BAQgBC,KARhB,EAQuB;AACtBT,UAAAA,GAAG,CAACT,KAAJ,GAAYkB,KAAK,CAACC,QAAlB;;AAEAT,UAAAA,IAAI,CAACO,kBAAL,CAAwBH,IAAxB,CAA6B,IAA7B,EAAmCI,KAAnC;AACH,SAZE;AAcHE,QAAAA,IAdG,gBAcEC,IAdF,EAcQC,OAdR,EAciB;AAChBb,UAAAA,GAAG,CAACR,cAAJ,GAAqBqB,OAAO,IAAIA,OAAO,CAACC,WAAxC;;AACAd,UAAAA,GAAG,CAACe,YAAJ,CAAiBH,IAAjB;AACH;AAjBE,OAAP;AAmBH;;;;EAzCmC7B,uB;;AA4CxCiC,MAAM,CAACC,OAAP,GAAiB7B,yBAAjB","sourcesContent":["'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingParserMixin extends ErrorReportingMixinBase {\n    constructor(parser, opts) {\n        super(parser, opts);\n\n        this.opts = opts;\n        this.ctLoc = null;\n        this.locBeforeToken = false;\n    }\n\n    _setErrorLocation(err) {\n        if (this.ctLoc) {\n            err.startLine = this.ctLoc.startLine;\n            err.startCol = this.ctLoc.startCol;\n            err.startOffset = this.ctLoc.startOffset;\n\n            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\n            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\n            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\n                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n            },\n\n            _processInputToken(token) {\n                mxn.ctLoc = token.location;\n\n                orig._processInputToken.call(this, token);\n            },\n\n            _err(code, options) {\n                mxn.locBeforeToken = options && options.beforeToken;\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingParserMixin;\n"]},"metadata":{},"sourceType":"script"}