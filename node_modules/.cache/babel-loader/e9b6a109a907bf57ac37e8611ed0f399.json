{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nvar _inherits = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/inherits.js\")[\"default\"];\n\nvar _createSuper = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/createSuper.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.object.create.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.for-each.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nvar Mixin = require('../../utils/mixin');\n\nvar Tokenizer = require('../../tokenizer');\n\nvar PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nvar LocationInfoTokenizerMixin = /*#__PURE__*/function (_Mixin) {\n  _inherits(LocationInfoTokenizerMixin, _Mixin);\n\n  var _super = _createSuper(LocationInfoTokenizerMixin);\n\n  function LocationInfoTokenizerMixin(tokenizer) {\n    var _this;\n\n    _classCallCheck(this, LocationInfoTokenizerMixin);\n\n    _this = _super.call(this, tokenizer);\n    _this.tokenizer = tokenizer;\n    _this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n    _this.currentAttrLocation = null;\n    _this.ctLoc = null;\n    return _this;\n  }\n\n  _createClass(LocationInfoTokenizerMixin, [{\n    key: \"_getCurrentLocation\",\n    value: function _getCurrentLocation() {\n      return {\n        startLine: this.posTracker.line,\n        startCol: this.posTracker.col,\n        startOffset: this.posTracker.offset,\n        endLine: -1,\n        endCol: -1,\n        endOffset: -1\n      };\n    }\n  }, {\n    key: \"_attachCurrentAttrLocationInfo\",\n    value: function _attachCurrentAttrLocationInfo() {\n      this.currentAttrLocation.endLine = this.posTracker.line;\n      this.currentAttrLocation.endCol = this.posTracker.col;\n      this.currentAttrLocation.endOffset = this.posTracker.offset;\n      var currentToken = this.tokenizer.currentToken;\n      var currentAttr = this.tokenizer.currentAttr;\n\n      if (!currentToken.location.attrs) {\n        currentToken.location.attrs = Object.create(null);\n      }\n\n      currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n  }, {\n    key: \"_getOverriddenMethods\",\n    value: function _getOverriddenMethods(mxn, orig) {\n      var methods = {\n        _createStartTagToken: function _createStartTagToken() {\n          orig._createStartTagToken.call(this);\n\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createEndTagToken: function _createEndTagToken() {\n          orig._createEndTagToken.call(this);\n\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createCommentToken: function _createCommentToken() {\n          orig._createCommentToken.call(this);\n\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createDoctypeToken: function _createDoctypeToken(initialName) {\n          orig._createDoctypeToken.call(this, initialName);\n\n          this.currentToken.location = mxn.ctLoc;\n        },\n        _createCharacterToken: function _createCharacterToken(type, ch) {\n          orig._createCharacterToken.call(this, type, ch);\n\n          this.currentCharacterToken.location = mxn.ctLoc;\n        },\n        _createEOFToken: function _createEOFToken() {\n          orig._createEOFToken.call(this);\n\n          this.currentToken.location = mxn._getCurrentLocation();\n        },\n        _createAttr: function _createAttr(attrNameFirstCh) {\n          orig._createAttr.call(this, attrNameFirstCh);\n\n          mxn.currentAttrLocation = mxn._getCurrentLocation();\n        },\n        _leaveAttrName: function _leaveAttrName(toState) {\n          orig._leaveAttrName.call(this, toState);\n\n          mxn._attachCurrentAttrLocationInfo();\n        },\n        _leaveAttrValue: function _leaveAttrValue(toState) {\n          orig._leaveAttrValue.call(this, toState);\n\n          mxn._attachCurrentAttrLocationInfo();\n        },\n        _emitCurrentToken: function _emitCurrentToken() {\n          var ctLoc = this.currentToken.location; //NOTE: if we have pending character token make it's end location equal to the\n          //current token's start location.\n\n          if (this.currentCharacterToken) {\n            this.currentCharacterToken.location.endLine = ctLoc.startLine;\n            this.currentCharacterToken.location.endCol = ctLoc.startCol;\n            this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n          }\n\n          if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n            ctLoc.endLine = ctLoc.startLine;\n            ctLoc.endCol = ctLoc.startCol;\n            ctLoc.endOffset = ctLoc.startOffset;\n          } else {\n            ctLoc.endLine = mxn.posTracker.line;\n            ctLoc.endCol = mxn.posTracker.col + 1;\n            ctLoc.endOffset = mxn.posTracker.offset + 1;\n          }\n\n          orig._emitCurrentToken.call(this);\n        },\n        _emitCurrentCharacterToken: function _emitCurrentCharacterToken() {\n          var ctLoc = this.currentCharacterToken && this.currentCharacterToken.location; //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n          //then set it's location at the current preprocessor position.\n          //We don't need to increment preprocessor position, since character token\n          //emission is always forced by the start of the next character token here.\n          //So, we already have advanced position.\n\n          if (ctLoc && ctLoc.endOffset === -1) {\n            ctLoc.endLine = mxn.posTracker.line;\n            ctLoc.endCol = mxn.posTracker.col;\n            ctLoc.endOffset = mxn.posTracker.offset;\n          }\n\n          orig._emitCurrentCharacterToken.call(this);\n        }\n      }; //NOTE: patch initial states for each mode to obtain token start position\n\n      Object.keys(Tokenizer.MODE).forEach(function (modeName) {\n        var state = Tokenizer.MODE[modeName];\n\n        methods[state] = function (cp) {\n          mxn.ctLoc = mxn._getCurrentLocation();\n          orig[state].call(this, cp);\n        };\n      });\n      return methods;\n    }\n  }]);\n\n  return LocationInfoTokenizerMixin;\n}(Mixin);\n\nmodule.exports = LocationInfoTokenizerMixin;","map":{"version":3,"sources":["/home/thomas/Code/BingoFerrand/node_modules/cheerio/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js"],"names":["Mixin","require","Tokenizer","PositionTrackingPreprocessorMixin","LocationInfoTokenizerMixin","tokenizer","posTracker","install","preprocessor","currentAttrLocation","ctLoc","startLine","line","startCol","col","startOffset","offset","endLine","endCol","endOffset","currentToken","currentAttr","location","attrs","Object","create","name","mxn","orig","methods","_createStartTagToken","call","_createEndTagToken","_createCommentToken","_createDoctypeToken","initialName","_createCharacterToken","type","ch","currentCharacterToken","_createEOFToken","_getCurrentLocation","_createAttr","attrNameFirstCh","_leaveAttrName","toState","_attachCurrentAttrLocationInfo","_leaveAttrValue","_emitCurrentToken","EOF_TOKEN","_emitCurrentCharacterToken","keys","MODE","forEach","modeName","state","cp","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nclass LocationInfoTokenizerMixin extends Mixin {\n    constructor(tokenizer) {\n        super(tokenizer);\n\n        this.tokenizer = tokenizer;\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n        this.currentAttrLocation = null;\n        this.ctLoc = null;\n    }\n\n    _getCurrentLocation() {\n        return {\n            startLine: this.posTracker.line,\n            startCol: this.posTracker.col,\n            startOffset: this.posTracker.offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n\n    _attachCurrentAttrLocationInfo() {\n        this.currentAttrLocation.endLine = this.posTracker.line;\n        this.currentAttrLocation.endCol = this.posTracker.col;\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n        const currentToken = this.tokenizer.currentToken;\n        const currentAttr = this.tokenizer.currentAttr;\n\n        if (!currentToken.location.attrs) {\n            currentToken.location.attrs = Object.create(null);\n        }\n\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        const methods = {\n            _createStartTagToken() {\n                orig._createStartTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createEndTagToken() {\n                orig._createEndTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCommentToken() {\n                orig._createCommentToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createDoctypeToken(initialName) {\n                orig._createDoctypeToken.call(this, initialName);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCharacterToken(type, ch) {\n                orig._createCharacterToken.call(this, type, ch);\n                this.currentCharacterToken.location = mxn.ctLoc;\n            },\n\n            _createEOFToken() {\n                orig._createEOFToken.call(this);\n                this.currentToken.location = mxn._getCurrentLocation();\n            },\n\n            _createAttr(attrNameFirstCh) {\n                orig._createAttr.call(this, attrNameFirstCh);\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\n            },\n\n            _leaveAttrName(toState) {\n                orig._leaveAttrName.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _leaveAttrValue(toState) {\n                orig._leaveAttrValue.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _emitCurrentToken() {\n                const ctLoc = this.currentToken.location;\n\n                //NOTE: if we have pending character token make it's end location equal to the\n                //current token's start location.\n                if (this.currentCharacterToken) {\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n                }\n\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n                    ctLoc.endLine = ctLoc.startLine;\n                    ctLoc.endCol = ctLoc.startCol;\n                    ctLoc.endOffset = ctLoc.startOffset;\n                } else {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col + 1;\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\n                }\n\n                orig._emitCurrentToken.call(this);\n            },\n\n            _emitCurrentCharacterToken() {\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n                //then set it's location at the current preprocessor position.\n                //We don't need to increment preprocessor position, since character token\n                //emission is always forced by the start of the next character token here.\n                //So, we already have advanced position.\n                if (ctLoc && ctLoc.endOffset === -1) {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col;\n                    ctLoc.endOffset = mxn.posTracker.offset;\n                }\n\n                orig._emitCurrentCharacterToken.call(this);\n            }\n        };\n\n        //NOTE: patch initial states for each mode to obtain token start position\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\n            const state = Tokenizer.MODE[modeName];\n\n            methods[state] = function(cp) {\n                mxn.ctLoc = mxn._getCurrentLocation();\n                orig[state].call(this, cp);\n            };\n        });\n\n        return methods;\n    }\n}\n\nmodule.exports = LocationInfoTokenizerMixin;\n"]},"metadata":{},"sourceType":"script"}