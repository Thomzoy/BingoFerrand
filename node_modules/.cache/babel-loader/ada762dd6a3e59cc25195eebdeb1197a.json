{"ast":null,"code":"\"use strict\";\n/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\n\nvar _typeof = require(\"/home/thomas/Code/BingoFerrand/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.for-each.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.array.some.js\");\n\nrequire(\"core-js/modules/es.array.index-of.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.array.splice.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = exports.removeAttr = exports.val = exports.data = exports.prop = exports.attr = void 0;\n\nvar static_1 = require(\"../static\");\n\nvar utils_1 = require(\"../utils\");\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar rspace = /\\s+/;\nvar dataAttrPrefix = 'data-';\n/*\n * Lookup table for coercing string data-* attributes to their corresponding\n * JavaScript primitives\n */\n\nvar primitives = {\n  \"null\": null,\n  \"true\": true,\n  \"false\": false\n}; // Attributes that are booleans\n\nvar rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i; // Matches strings that look like JSON objects or arrays\n\nvar rbrace = /^{[^]*}$|^\\[[^]*]$/;\n\nfunction getAttr(elem, name, xmlMode) {\n  var _a;\n\n  if (!elem || !utils_1.isTag(elem)) return undefined;\n  (_a = elem.attribs) !== null && _a !== void 0 ? _a : elem.attribs = {}; // Return the entire attribs object if no attribute specified\n\n  if (!name) {\n    return elem.attribs;\n  }\n\n  if (hasOwn.call(elem.attribs, name)) {\n    // Get the (decoded) attribute\n    return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n  } // Mimic the DOM and return text content as value for `option's`\n\n\n  if (elem.name === 'option' && name === 'value') {\n    return static_1.text(elem.children);\n  } // Mimic DOM with default value for radios/checkboxes\n\n\n  if (elem.name === 'input' && (elem.attribs.type === 'radio' || elem.attribs.type === 'checkbox') && name === 'value') {\n    return 'on';\n  }\n\n  return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\n\n\nfunction setAttr(el, name, value) {\n  if (value === null) {\n    removeAttribute(el, name);\n  } else {\n    el.attribs[name] = \"\" + value;\n  }\n}\n\nfunction attr(name, value) {\n  // Set the value (with attr map support)\n  if (_typeof(name) === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      if (typeof name !== 'string') {\n        {\n          throw new Error('Bad combination of arguments.');\n        }\n      }\n\n      return utils_1.domEach(this, function (el, i) {\n        if (utils_1.isTag(el)) setAttr(el, name, value.call(el, i, el.attribs[name]));\n      });\n    }\n\n    return utils_1.domEach(this, function (el) {\n      if (!utils_1.isTag(el)) return;\n\n      if (_typeof(name) === 'object') {\n        Object.keys(name).forEach(function (objName) {\n          var objValue = name[objName];\n          setAttr(el, objName, objValue);\n        });\n      } else {\n        setAttr(el, name, value);\n      }\n    });\n  }\n\n  return arguments.length > 1 ? this : getAttr(this[0], name, this.options.xmlMode);\n}\n\nexports.attr = attr;\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Elenent to get the prop of.\n * @param name - Name of the prop.\n * @returns The prop's value.\n */\n\nfunction getProp(el, name, xmlMode) {\n  if (!el || !utils_1.isTag(el)) return;\n  return name in el ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n  el[name] : !xmlMode && rboolean.test(name) ? getAttr(el, name, false) !== undefined : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n */\n\n\nfunction setProp(el, name, value, xmlMode) {\n  if (name in el) {\n    // @ts-expect-error Overriding value\n    el[name] = value;\n  } else {\n    setAttr(el, name, !xmlMode && rboolean.test(name) ? value ? '' : null : \"\" + value);\n  }\n}\n\nfunction prop(name, value) {\n  var _this = this;\n\n  if (typeof name === 'string' && value === undefined) {\n    switch (name) {\n      case 'style':\n        {\n          var property_1 = this.css();\n          var keys = Object.keys(property_1);\n          keys.forEach(function (p, i) {\n            property_1[i] = p;\n          });\n          property_1.length = keys.length;\n          return property_1;\n        }\n\n      case 'tagName':\n      case 'nodeName':\n        {\n          var el = this[0];\n          return utils_1.isTag(el) ? el.name.toUpperCase() : undefined;\n        }\n\n      case 'outerHTML':\n        return this.clone().wrap('<container />').parent().html();\n\n      case 'innerHTML':\n        return this.html();\n\n      default:\n        return getProp(this[0], name, this.options.xmlMode);\n    }\n  }\n\n  if (_typeof(name) === 'object' || value !== undefined) {\n    if (typeof value === 'function') {\n      if (_typeof(name) === 'object') {\n        throw new Error('Bad combination of arguments.');\n      }\n\n      return utils_1.domEach(this, function (el, i) {\n        if (utils_1.isTag(el)) setProp(el, name, value.call(el, i, getProp(el, name, _this.options.xmlMode)), _this.options.xmlMode);\n      });\n    }\n\n    return utils_1.domEach(this, function (el) {\n      if (!utils_1.isTag(el)) return;\n\n      if (_typeof(name) === 'object') {\n        Object.keys(name).forEach(function (key) {\n          var val = name[key];\n          setProp(el, key, val, _this.options.xmlMode);\n        });\n      } else {\n        setProp(el, name, value, _this.options.xmlMode);\n      }\n    });\n  }\n\n  return undefined;\n}\n\nexports.prop = prop;\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param el - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\n\nfunction setData(el, name, value) {\n  var _a;\n\n  var elem = el;\n  (_a = elem.data) !== null && _a !== void 0 ? _a : elem.data = {};\n  if (_typeof(name) === 'object') Object.assign(elem.data, name);else if (typeof name === 'string' && value !== undefined) {\n    elem.data[name] = value;\n  }\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store. If no\n * attribute name is specified, read *all* HTML5 `data-*` attributes in this manner.\n *\n * @private\n * @category Attributes\n * @param el - Elenent to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value, or a map with all of the data attribute.\n */\n\n\nfunction readData(el, name) {\n  var domNames;\n  var jsNames;\n  var value;\n\n  if (name == null) {\n    domNames = Object.keys(el.attribs).filter(function (attrName) {\n      return attrName.startsWith(dataAttrPrefix);\n    });\n    jsNames = domNames.map(function (domName) {\n      return utils_1.camelCase(domName.slice(dataAttrPrefix.length));\n    });\n  } else {\n    domNames = [dataAttrPrefix + utils_1.cssCase(name)];\n    jsNames = [name];\n  }\n\n  for (var idx = 0; idx < domNames.length; ++idx) {\n    var domName = domNames[idx];\n    var jsName = jsNames[idx];\n\n    if (hasOwn.call(el.attribs, domName) && !hasOwn.call(el.data, jsName)) {\n      value = el.attribs[domName];\n\n      if (hasOwn.call(primitives, value)) {\n        value = primitives[value];\n      } else if (value === String(Number(value))) {\n        value = Number(value);\n      } else if (rbrace.test(value)) {\n        try {\n          value = JSON.parse(value);\n        } catch (e) {\n          /* Ignore */\n        }\n      }\n\n      el.data[jsName] = value;\n    }\n  }\n\n  return name == null ? el.data : value;\n}\n\nfunction data(name, value) {\n  var _a;\n\n  var elem = this[0];\n  if (!elem || !utils_1.isTag(elem)) return;\n  var dataEl = elem;\n  (_a = dataEl.data) !== null && _a !== void 0 ? _a : dataEl.data = {}; // Return the entire data object if no data specified\n\n  if (!name) {\n    return readData(dataEl);\n  } // Set the value (with attr map support)\n\n\n  if (_typeof(name) === 'object' || value !== undefined) {\n    utils_1.domEach(this, function (el) {\n      if (utils_1.isTag(el)) if (_typeof(name) === 'object') setData(el, name);else setData(el, name, value);\n    });\n    return this;\n  }\n\n  if (hasOwn.call(dataEl.data, name)) {\n    return dataEl.data[name];\n  }\n\n  return readData(dataEl, name);\n}\n\nexports.data = data;\n\nfunction val(value) {\n  var querying = arguments.length === 0;\n  var element = this[0];\n  if (!element || !utils_1.isTag(element)) return querying ? undefined : this;\n\n  switch (element.name) {\n    case 'textarea':\n      return this.text(value);\n\n    case 'select':\n      {\n        var option = this.find('option:selected');\n\n        if (!querying) {\n          if (this.attr('multiple') == null && _typeof(value) === 'object') {\n            return this;\n          }\n\n          this.find('option').removeAttr('selected');\n          var values = _typeof(value) !== 'object' ? [value] : value;\n\n          for (var i = 0; i < values.length; i++) {\n            this.find(\"option[value=\\\"\" + values[i] + \"\\\"]\").attr('selected', '');\n          }\n\n          return this;\n        }\n\n        return this.attr('multiple') ? option.toArray().map(function (el) {\n          return static_1.text(el.children);\n        }) : option.attr('value');\n      }\n\n    case 'input':\n    case 'option':\n      return querying ? this.attr('value') : this.attr('value', value);\n  }\n\n  return undefined;\n}\n\nexports.val = val;\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\n\nfunction removeAttribute(elem, name) {\n  if (!elem.attribs || !hasOwn.call(elem.attribs, name)) return;\n  delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\n\n\nfunction splitNames(names) {\n  return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\n\n\nfunction removeAttr(name) {\n  var attrNames = splitNames(name);\n\n  var _loop_1 = function _loop_1(i) {\n    utils_1.domEach(this_1, function (elem) {\n      if (utils_1.isTag(elem)) removeAttribute(elem, attrNames[i]);\n    });\n  };\n\n  var this_1 = this;\n\n  for (var i = 0; i < attrNames.length; i++) {\n    _loop_1(i);\n  }\n\n  return this;\n}\n\nexports.removeAttr = removeAttr;\n/**\n * Check to see if *any* of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\n\nfunction hasClass(className) {\n  return this.toArray().some(function (elem) {\n    var clazz = utils_1.isTag(elem) && elem.attribs[\"class\"];\n    var idx = -1;\n\n    if (clazz && className.length) {\n      while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n        var end = idx + className.length;\n\n        if ((idx === 0 || rspace.test(clazz[idx - 1])) && (end === clazz.length || rspace.test(clazz[end]))) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  });\n}\n\nexports.hasClass = hasClass;\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\n\nfunction addClass(value) {\n  // Support functions\n  if (typeof value === 'function') {\n    return utils_1.domEach(this, function (el, i) {\n      if (utils_1.isTag(el)) {\n        var className = el.attribs[\"class\"] || '';\n        addClass.call([el], value.call(el, i, className));\n      }\n    });\n  } // Return if no value or not a string or function\n\n\n  if (!value || typeof value !== 'string') return this;\n  var classNames = value.split(rspace);\n  var numElements = this.length;\n\n  for (var i = 0; i < numElements; i++) {\n    var el = this[i]; // If selected element isn't a tag, move on\n\n    if (!utils_1.isTag(el)) continue; // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n\n    var className = getAttr(el, 'class', false);\n\n    if (!className) {\n      setAttr(el, 'class', classNames.join(' ').trim());\n    } else {\n      var setClass = \" \" + className + \" \"; // Check if class already exists\n\n      for (var j = 0; j < classNames.length; j++) {\n        var appendClass = classNames[j] + \" \";\n        if (!setClass.includes(\" \" + appendClass)) setClass += appendClass;\n      }\n\n      setAttr(el, 'class', setClass.trim());\n    }\n  }\n\n  return this;\n}\n\nexports.addClass = addClass;\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\n\nfunction removeClass(name) {\n  // Handle if value is a function\n  if (typeof name === 'function') {\n    return utils_1.domEach(this, function (el, i) {\n      if (utils_1.isTag(el)) removeClass.call([el], name.call(el, i, el.attribs[\"class\"] || ''));\n    });\n  }\n\n  var classes = splitNames(name);\n  var numClasses = classes.length;\n  var removeAll = arguments.length === 0;\n  return utils_1.domEach(this, function (el) {\n    if (!utils_1.isTag(el)) return;\n\n    if (removeAll) {\n      // Short circuit the remove all case as this is the nice one\n      el.attribs[\"class\"] = '';\n    } else {\n      var elClasses = splitNames(el.attribs[\"class\"]);\n      var changed = false;\n\n      for (var j = 0; j < numClasses; j++) {\n        var index = elClasses.indexOf(classes[j]);\n\n        if (index >= 0) {\n          elClasses.splice(index, 1);\n          changed = true;\n          /*\n           * We have to do another pass to ensure that there are not duplicate\n           * classes listed\n           */\n\n          j--;\n        }\n      }\n\n      if (changed) {\n        el.attribs[\"class\"] = elClasses.join(' ');\n      }\n    }\n  });\n}\n\nexports.removeClass = removeClass;\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\n\nfunction toggleClass(value, stateVal) {\n  // Support functions\n  if (typeof value === 'function') {\n    return utils_1.domEach(this, function (el, i) {\n      if (utils_1.isTag(el)) {\n        toggleClass.call([el], value.call(el, i, el.attribs[\"class\"] || '', stateVal), stateVal);\n      }\n    });\n  } // Return if no value or not a string or function\n\n\n  if (!value || typeof value !== 'string') return this;\n  var classNames = value.split(rspace);\n  var numClasses = classNames.length;\n  var state = typeof stateVal === 'boolean' ? stateVal ? 1 : -1 : 0;\n  var numElements = this.length;\n\n  for (var i = 0; i < numElements; i++) {\n    var el = this[i]; // If selected element isn't a tag, move on\n\n    if (!utils_1.isTag(el)) continue;\n    var elementClasses = splitNames(el.attribs[\"class\"]); // Check if class already exists\n\n    for (var j = 0; j < numClasses; j++) {\n      // Check if the class name is currently defined\n      var index = elementClasses.indexOf(classNames[j]); // Add if stateValue === true or we are toggling and there is no value\n\n      if (state >= 0 && index < 0) {\n        elementClasses.push(classNames[j]);\n      } else if (state <= 0 && index >= 0) {\n        // Otherwise remove but only if the item exists\n        elementClasses.splice(index, 1);\n      }\n    }\n\n    el.attribs[\"class\"] = elementClasses.join(' ');\n  }\n\n  return this;\n}\n\nexports.toggleClass = toggleClass;","map":{"version":3,"sources":["/home/thomas/Code/BingoFerrand/node_modules/cheerio/lib/api/attributes.js"],"names":["Object","defineProperty","exports","value","toggleClass","removeClass","addClass","hasClass","removeAttr","val","data","prop","attr","static_1","require","utils_1","hasOwn","prototype","hasOwnProperty","rspace","dataAttrPrefix","primitives","rboolean","rbrace","getAttr","elem","name","xmlMode","_a","isTag","undefined","attribs","call","test","text","children","type","setAttr","el","removeAttribute","Error","domEach","i","keys","forEach","objName","objValue","arguments","length","options","getProp","setProp","_this","property_1","css","p","toUpperCase","clone","wrap","parent","html","key","setData","assign","readData","domNames","jsNames","filter","attrName","startsWith","map","domName","camelCase","slice","cssCase","idx","jsName","String","Number","JSON","parse","e","dataEl","querying","element","option","find","values","toArray","splitNames","names","trim","split","attrNames","_loop_1","this_1","className","some","clazz","indexOf","end","classNames","numElements","join","setClass","j","appendClass","includes","classes","numClasses","removeAll","elClasses","changed","index","splice","stateVal","state","elementClasses","push"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = exports.removeAttr = exports.val = exports.data = exports.prop = exports.attr = void 0;\nvar static_1 = require(\"../static\");\nvar utils_1 = require(\"../utils\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar rspace = /\\s+/;\nvar dataAttrPrefix = 'data-';\n/*\n * Lookup table for coercing string data-* attributes to their corresponding\n * JavaScript primitives\n */\nvar primitives = {\n    null: null,\n    true: true,\n    false: false,\n};\n// Attributes that are booleans\nvar rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nvar rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !utils_1.isTag(elem))\n        return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});\n    // Return the entire attribs object if no attribute specified\n    if (!name) {\n        return elem.attribs;\n    }\n    if (hasOwn.call(elem.attribs, name)) {\n        // Get the (decoded) attribute\n        return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n    }\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === 'option' && name === 'value') {\n        return static_1.text(elem.children);\n    }\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === 'input' &&\n        (elem.attribs.type === 'radio' || elem.attribs.type === 'checkbox') &&\n        name === 'value') {\n        return 'on';\n    }\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n    if (value === null) {\n        removeAttribute(el, name);\n    }\n    else {\n        el.attribs[name] = \"\" + value;\n    }\n}\nfunction attr(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name !== 'string') {\n                {\n                    throw new Error('Bad combination of arguments.');\n                }\n            }\n            return utils_1.domEach(this, function (el, i) {\n                if (utils_1.isTag(el))\n                    setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return utils_1.domEach(this, function (el) {\n            if (!utils_1.isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach(function (objName) {\n                    var objValue = name[objName];\n                    setAttr(el, objName, objValue);\n                });\n            }\n            else {\n                setAttr(el, name, value);\n            }\n        });\n    }\n    return arguments.length > 1\n        ? this\n        : getAttr(this[0], name, this.options.xmlMode);\n}\nexports.attr = attr;\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Elenent to get the prop of.\n * @param name - Name of the prop.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n    if (!el || !utils_1.isTag(el))\n        return;\n    return name in el\n        ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n            el[name]\n        : !xmlMode && rboolean.test(name)\n            ? getAttr(el, name, false) !== undefined\n            : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n */\nfunction setProp(el, name, value, xmlMode) {\n    if (name in el) {\n        // @ts-expect-error Overriding value\n        el[name] = value;\n    }\n    else {\n        setAttr(el, name, !xmlMode && rboolean.test(name) ? (value ? '' : null) : \"\" + value);\n    }\n}\nfunction prop(name, value) {\n    var _this = this;\n    if (typeof name === 'string' && value === undefined) {\n        switch (name) {\n            case 'style': {\n                var property_1 = this.css();\n                var keys = Object.keys(property_1);\n                keys.forEach(function (p, i) {\n                    property_1[i] = p;\n                });\n                property_1.length = keys.length;\n                return property_1;\n            }\n            case 'tagName':\n            case 'nodeName': {\n                var el = this[0];\n                return utils_1.isTag(el) ? el.name.toUpperCase() : undefined;\n            }\n            case 'outerHTML':\n                return this.clone().wrap('<container />').parent().html();\n            case 'innerHTML':\n                return this.html();\n            default:\n                return getProp(this[0], name, this.options.xmlMode);\n        }\n    }\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name === 'object') {\n                throw new Error('Bad combination of arguments.');\n            }\n            return utils_1.domEach(this, function (el, i) {\n                if (utils_1.isTag(el))\n                    setProp(el, name, value.call(el, i, getProp(el, name, _this.options.xmlMode)), _this.options.xmlMode);\n            });\n        }\n        return utils_1.domEach(this, function (el) {\n            if (!utils_1.isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach(function (key) {\n                    var val = name[key];\n                    setProp(el, key, val, _this.options.xmlMode);\n                });\n            }\n            else {\n                setProp(el, name, value, _this.options.xmlMode);\n            }\n        });\n    }\n    return undefined;\n}\nexports.prop = prop;\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param el - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(el, name, value) {\n    var _a;\n    var elem = el;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});\n    if (typeof name === 'object')\n        Object.assign(elem.data, name);\n    else if (typeof name === 'string' && value !== undefined) {\n        elem.data[name] = value;\n    }\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store. If no\n * attribute name is specified, read *all* HTML5 `data-*` attributes in this manner.\n *\n * @private\n * @category Attributes\n * @param el - Elenent to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value, or a map with all of the data attribute.\n */\nfunction readData(el, name) {\n    var domNames;\n    var jsNames;\n    var value;\n    if (name == null) {\n        domNames = Object.keys(el.attribs).filter(function (attrName) {\n            return attrName.startsWith(dataAttrPrefix);\n        });\n        jsNames = domNames.map(function (domName) {\n            return utils_1.camelCase(domName.slice(dataAttrPrefix.length));\n        });\n    }\n    else {\n        domNames = [dataAttrPrefix + utils_1.cssCase(name)];\n        jsNames = [name];\n    }\n    for (var idx = 0; idx < domNames.length; ++idx) {\n        var domName = domNames[idx];\n        var jsName = jsNames[idx];\n        if (hasOwn.call(el.attribs, domName) &&\n            !hasOwn.call(el.data, jsName)) {\n            value = el.attribs[domName];\n            if (hasOwn.call(primitives, value)) {\n                value = primitives[value];\n            }\n            else if (value === String(Number(value))) {\n                value = Number(value);\n            }\n            else if (rbrace.test(value)) {\n                try {\n                    value = JSON.parse(value);\n                }\n                catch (e) {\n                    /* Ignore */\n                }\n            }\n            el.data[jsName] = value;\n        }\n    }\n    return name == null ? el.data : value;\n}\nfunction data(name, value) {\n    var _a;\n    var elem = this[0];\n    if (!elem || !utils_1.isTag(elem))\n        return;\n    var dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});\n    // Return the entire data object if no data specified\n    if (!name) {\n        return readData(dataEl);\n    }\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        utils_1.domEach(this, function (el) {\n            if (utils_1.isTag(el))\n                if (typeof name === 'object')\n                    setData(el, name);\n                else\n                    setData(el, name, value);\n        });\n        return this;\n    }\n    if (hasOwn.call(dataEl.data, name)) {\n        return dataEl.data[name];\n    }\n    return readData(dataEl, name);\n}\nexports.data = data;\nfunction val(value) {\n    var querying = arguments.length === 0;\n    var element = this[0];\n    if (!element || !utils_1.isTag(element))\n        return querying ? undefined : this;\n    switch (element.name) {\n        case 'textarea':\n            return this.text(value);\n        case 'select': {\n            var option = this.find('option:selected');\n            if (!querying) {\n                if (this.attr('multiple') == null && typeof value === 'object') {\n                    return this;\n                }\n                this.find('option').removeAttr('selected');\n                var values = typeof value !== 'object' ? [value] : value;\n                for (var i = 0; i < values.length; i++) {\n                    this.find(\"option[value=\\\"\" + values[i] + \"\\\"]\").attr('selected', '');\n                }\n                return this;\n            }\n            return this.attr('multiple')\n                ? option.toArray().map(function (el) { return static_1.text(el.children); })\n                : option.attr('value');\n        }\n        case 'input':\n        case 'option':\n            return querying\n                ? this.attr('value')\n                : this.attr('value', value);\n    }\n    return undefined;\n}\nexports.val = val;\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n    if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n        return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n    return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nfunction removeAttr(name) {\n    var attrNames = splitNames(name);\n    var _loop_1 = function (i) {\n        utils_1.domEach(this_1, function (elem) {\n            if (utils_1.isTag(elem))\n                removeAttribute(elem, attrNames[i]);\n        });\n    };\n    var this_1 = this;\n    for (var i = 0; i < attrNames.length; i++) {\n        _loop_1(i);\n    }\n    return this;\n}\nexports.removeAttr = removeAttr;\n/**\n * Check to see if *any* of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nfunction hasClass(className) {\n    return this.toArray().some(function (elem) {\n        var clazz = utils_1.isTag(elem) && elem.attribs.class;\n        var idx = -1;\n        if (clazz && className.length) {\n            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n                var end = idx + className.length;\n                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&\n                    (end === clazz.length || rspace.test(clazz[end]))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    });\n}\nexports.hasClass = hasClass;\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nfunction addClass(value) {\n    // Support functions\n    if (typeof value === 'function') {\n        return utils_1.domEach(this, function (el, i) {\n            if (utils_1.isTag(el)) {\n                var className = el.attribs.class || '';\n                addClass.call([el], value.call(el, i, className));\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    var classNames = value.split(rspace);\n    var numElements = this.length;\n    for (var i = 0; i < numElements; i++) {\n        var el = this[i];\n        // If selected element isn't a tag, move on\n        if (!utils_1.isTag(el))\n            continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        var className = getAttr(el, 'class', false);\n        if (!className) {\n            setAttr(el, 'class', classNames.join(' ').trim());\n        }\n        else {\n            var setClass = \" \" + className + \" \";\n            // Check if class already exists\n            for (var j = 0; j < classNames.length; j++) {\n                var appendClass = classNames[j] + \" \";\n                if (!setClass.includes(\" \" + appendClass))\n                    setClass += appendClass;\n            }\n            setAttr(el, 'class', setClass.trim());\n        }\n    }\n    return this;\n}\nexports.addClass = addClass;\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nfunction removeClass(name) {\n    // Handle if value is a function\n    if (typeof name === 'function') {\n        return utils_1.domEach(this, function (el, i) {\n            if (utils_1.isTag(el))\n                removeClass.call([el], name.call(el, i, el.attribs.class || ''));\n        });\n    }\n    var classes = splitNames(name);\n    var numClasses = classes.length;\n    var removeAll = arguments.length === 0;\n    return utils_1.domEach(this, function (el) {\n        if (!utils_1.isTag(el))\n            return;\n        if (removeAll) {\n            // Short circuit the remove all case as this is the nice one\n            el.attribs.class = '';\n        }\n        else {\n            var elClasses = splitNames(el.attribs.class);\n            var changed = false;\n            for (var j = 0; j < numClasses; j++) {\n                var index = elClasses.indexOf(classes[j]);\n                if (index >= 0) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */\n                    j--;\n                }\n            }\n            if (changed) {\n                el.attribs.class = elClasses.join(' ');\n            }\n        }\n    });\n}\nexports.removeClass = removeClass;\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nfunction toggleClass(value, stateVal) {\n    // Support functions\n    if (typeof value === 'function') {\n        return utils_1.domEach(this, function (el, i) {\n            if (utils_1.isTag(el)) {\n                toggleClass.call([el], value.call(el, i, el.attribs.class || '', stateVal), stateVal);\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    var classNames = value.split(rspace);\n    var numClasses = classNames.length;\n    var state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n    var numElements = this.length;\n    for (var i = 0; i < numElements; i++) {\n        var el = this[i];\n        // If selected element isn't a tag, move on\n        if (!utils_1.isTag(el))\n            continue;\n        var elementClasses = splitNames(el.attribs.class);\n        // Check if class already exists\n        for (var j = 0; j < numClasses; j++) {\n            // Check if the class name is currently defined\n            var index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index < 0) {\n                elementClasses.push(classNames[j]);\n            }\n            else if (state <= 0 && index >= 0) {\n                // Otherwise remove but only if the item exists\n                elementClasses.splice(index, 1);\n            }\n        }\n        el.attribs.class = elementClasses.join(' ');\n    }\n    return this;\n}\nexports.toggleClass = toggleClass;\n"]},"metadata":{},"sourceType":"script"}